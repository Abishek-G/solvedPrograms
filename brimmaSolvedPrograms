/*1. If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6
and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000. */

#include<bits/stdc++.h>
using namespace std;
int main(){
    int sum=0;
    for(int i=1;i<1000;i++){
        if(i%3==0||i%5==0){
            sum=sum+i;
        }
    }
    cout<<sum;
}

/*2.Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.*/

#include<bits/stdc++.h>
using namespace std;
int main(){
    int t1 = 0, t2 = 1, nextTerm = 0,sum=0;
    nextTerm = t1 + t2;
    while(nextTerm<=4000000) {
    if(nextTerm%2==0){
        sum+=nextTerm;
    }
    t1 = t2;
    t2 = nextTerm;
    nextTerm = t1 + t2;
  }
  cout<<sum;
}



/*3. The prime factors of 13195 are 5, 7, 13 and 29.
    What is the largest prime factor of the number 600851475143?*/

#include <bits/stdc++.h>
using namespace std;
int main()
{
    long int n = 600851475143 ;
    int divisor = 2, largestFact = 0;
    while(n!=0){
        if(n%divisor!=0){ 
            divisor += 1;   
        }else{
            largestFact = n; 
            n/=divisor;    
            if(n==1){           
                cout<<largestFact; 
                break;
            }
        }
    }
    return 0;
}

